["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$join","~$clojure.string"],"~:excludes",["~#set",[]],"~:name","~$keechma.ui-component","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$cljs.core.async","^?","~$keechma.reporter","^@","^>","^>","~$util","~$keechma.util","~$dep","~$com.stuartsierra.dependency","^B","^B","~$reporter","^@","^6","^6","^D","^D"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^5","^6","~$put!","^?"],"~:defs",["^ ","~$redirect",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","~:line",21,"~:column",4,"~:end-line",21,"~:end-column",12,"~:protocol","~$keechma.ui-component/IUIComponent","~:doc","Redirects page to the URL generated from params","~:arglists",["~#list",["~$quote",["^V",[["~$this","~$params"]]]]]],"^R","^S","^9","~$keechma.ui-component/redirect","~:variadic",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",12,"~:method-params",["^V",[["^X","^Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^O",1,"^N",14,"^P",21,"~:max-fixed-arity",2,"~:fn-var",true,"^U",["^V",["^W",["^V",[["^X","^Y"]]]]],"^T","Redirects page to the URL generated from params"],"~$->UIComponent",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",84,"^O",12,"^P",84,"^Q",23,"~:internal-ctor",true,"~:factory","~:positional","^U",["^V",["^W",["^V",[["~$component-deps","~$subscription-deps","~$renderer"]]]]]],"^9","~$keechma.ui-component/->UIComponent","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",23,"^10",["^V",[["^19","^1:","^1;"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^16",true,"^17","^18","^N",84,"^P",84,"^13",3,"^14",true,"^U",["^V",["^W",["^V",[["^19","^1:","^1;"]]]]]],"~$send-command",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",27,"^O",4,"^P",27,"^Q",16,"^R","^S","^T","Sends a command to the controller.","^U",["^V",["^W",["^V",[["^X","~$command"],["^X","^1>","~$args"]]]]],"~:top-fn",["^ ","^[",false,"^13",3,"^10",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^U",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^12",["^V",[null,null]]]],"^R","^S","^9","~$keechma.ui-component/send-command","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",16,"^1@",["^ ","^[",false,"^13",3,"^10",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^U",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^12",["^V",[null,null]]],"^10",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",27,"^13",3,"^14",true,"^U",["^V",[["^X","^1>"],["^X","^1>","^1?"]]],"^T","Sends a command to the controller."],"~$assoc-name",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",168,"^O",17,"^P",168,"^Q",27,"~:private",true,"^U",["^V",["^W",["^V",[["~$components"]]]]]],"^1C",true,"^9","~$keechma.ui-component/assoc-name","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",27,"^10",["^V",[["^1D"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",168,"^P",168,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^1D"]]]]]],"~$subscription",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",23,"^O",4,"^P",23,"^Q",16,"^R","^S","^T","Returns a subscription based on the key.","^U",["^V",["^W",["^V",[["^X","~$key"],["^X","^1G","^1?"]]]]],"^1@",["^ ","^[",false,"^13",3,"^10",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^U",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^12",["^V",[null,null]]]],"^R","^S","^9","~$keechma.ui-component/subscription","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",16,"^1@",["^ ","^[",false,"^13",3,"^10",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^U",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^12",["^V",[null,null]]],"^10",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",23,"^13",3,"^14",true,"^U",["^V",[["^X","^1G"],["^X","^1G","^1?"]]],"^T","Returns a subscription based on the key."],"~$resolved-system",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",148,"^O",17,"^P",148,"^Q",32,"^1C",true,"^U",["^V",["^W",["^V",[["^1D","~$sorted-keys"]]]]]],"^1C",true,"^9","~$keechma.ui-component/resolved-system","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",32,"^10",["^V",[["^1D","^1J"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",148,"^P",148,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^1D","^1J"]]]]]],"~$report",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",20,"^O",4,"^P",20,"^Q",10,"^R","^S","^T",null,"^U",["^V",["^W",["^V",[["^X","~$name","~$payload"],["^X","^1M","^1N","~$path"],["^X","^1M","^1N","^1O","~$severity"]]]]],"^1@",["^ ","^[",false,"^13",5,"^10",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^U",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^12",["^V",[null,null,null]]]],"^R","^S","^9","~$keechma.ui-component/report","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",10,"^1@",["^ ","^[",false,"^13",5,"^10",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^U",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^12",["^V",[null,null,null]]],"^10",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^11",null,"^12",["^V",[null,null,null]],"^O",1,"^N",14,"^P",20,"^13",5,"^14",true,"^U",["^V",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]]],"^T",null],"~$resolve-component-dep",["^ ","^9","~$keechma.ui-component/resolve-component-dep","^M","resources/public/js/dev/keechma/ui_component.cljs","^N",144,"^O",1,"^P",144,"^Q",27,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",144,"^O",6,"^P",144,"^Q",27],"^T","See [[resolve-dep]]","~:tag","~$any"],"~$make-ex",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",9,"^O",7,"^P",9,"^Q",14,"^U",["^V",["^W",["^V",[["~$msg"]]]]]],"^9","~$keechma.ui-component/make-ex","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",14,"^10",["^V",[["^1W"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",9,"^P",9,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^1W"]]]]]],"~$system",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",181,"^O",7,"^P",181,"^Q",13,"^U",["^V",["^W",["^V",[["^1D"],["^1D","~$subscriptions"]]]]],"^T","Creates a component system.\n\n  Component system is a group of components that are interdependent. Each component\n  system must define a `:main` component which will be returned from the `system`\n  function.\n\n  `system` function resolves dependencies between components.\n\n  For example, let's say that your application consists of three components:\n\n  - layout\n  - sidebar\n  - chat room list\n\n  Layout is rendering the sidebar component and sidebar component is rendering the \n  chat room list component.\n\n  Chat room list component has a subscription dependency on `:chat-rooms` which will\n  return the list of chat rooms to render.\n\n  Usually you would either pass the chat rooms subscription from layout to sidebar to the\n  chat room list component, or the chat room list component would have a dependency\n  on a global `:chat-rooms` subscription.\n\n  Keechma allows you to avoid both of these problems:\n\n  - only the chat room list component will know about it's dependencies\n  - the dependencies will be injected from the outside by the `system` function \n\n  ```clojure\n  (defn layout-renderer [ctx] ;; ctx is `layout-component` record with resolved dependencies\n  [:div.main\n  [:div.sidebar [(component ctx :sidebar)]]]) ;; Resolve the `:sidebar` component\n\n  (def layout-component (constructor {:component-deps [:sidebar]\n  :renderer layout-renderer}))\n\n  (defn sidebar-renderer [ctx]\n  [:div.sidebar\n  [(component ctx :chat-room-list)]) ;; Resolve the `:chat-room-list` component\n\n  (def sidebar-component (constructor {:component-deps [:chat-room-list]\n  :renderer sidebar-renderer}))\n\n  (defn chat-room-list-renderer [ctx]\n  (let [chat-rooms (subscription ctx :chat-rooms)])) ;; Resolve the `:chat-rooms` subscription\n\n  (def chat-room-list-component (constructor {:subscription-deps [:chat-rooms]}))\n\n  (def main-component (system {:main layout-component ;; Map compnents to keys\n  :sidebar sidebar-component\n  :chat-room-list chat-room-list-component}\n  {:chat-rooms (fn [app-state-atom])})) ;; Map subscriptions to keys\n  ```\n  \n  In the example above `main-component` will be a Reagent component that can be mounted\n  into the DOM, with all of the dependencies between components resolved.\n\n  `system` function provided everything that components need from the outside, and all of the \n  components are reusable by design.\n  ","^1@",["^ ","^[",false,"^13",2,"^10",["^V",[["^1D"],["^1D","^1Z"]]],"^U",["^V",[["^1D"],["^1D","^1Z"]]],"^12",["^V",[null,null]]]],"^9","~$keechma.ui-component/system","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",13,"^1@",["^ ","^[",false,"^13",2,"^10",["^V",[["^1D"],["^1D","^1Z"]]],"^U",["^V",[["^1D"],["^1D","^1Z"]]],"^12",["^V",[null,null]]],"^10",["^V",[["^1D"],["^1D","^1Z"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",181,"^P",181,"^13",2,"^14",true,"^U",["^V",[["^1D"],["^1D","^1Z"]]],"^T","Creates a component system.\n\n  Component system is a group of components that are interdependent. Each component\n  system must define a `:main` component which will be returned from the `system`\n  function.\n\n  `system` function resolves dependencies between components.\n\n  For example, let's say that your application consists of three components:\n\n  - layout\n  - sidebar\n  - chat room list\n\n  Layout is rendering the sidebar component and sidebar component is rendering the \n  chat room list component.\n\n  Chat room list component has a subscription dependency on `:chat-rooms` which will\n  return the list of chat rooms to render.\n\n  Usually you would either pass the chat rooms subscription from layout to sidebar to the\n  chat room list component, or the chat room list component would have a dependency\n  on a global `:chat-rooms` subscription.\n\n  Keechma allows you to avoid both of these problems:\n\n  - only the chat room list component will know about it's dependencies\n  - the dependencies will be injected from the outside by the `system` function \n\n  ```clojure\n  (defn layout-renderer [ctx] ;; ctx is `layout-component` record with resolved dependencies\n  [:div.main\n  [:div.sidebar [(component ctx :sidebar)]]]) ;; Resolve the `:sidebar` component\n\n  (def layout-component (constructor {:component-deps [:sidebar]\n  :renderer layout-renderer}))\n\n  (defn sidebar-renderer [ctx]\n  [:div.sidebar\n  [(component ctx :chat-room-list)]) ;; Resolve the `:chat-room-list` component\n\n  (def sidebar-component (constructor {:component-deps [:chat-room-list]\n  :renderer sidebar-renderer}))\n\n  (defn chat-room-list-renderer [ctx]\n  (let [chat-rooms (subscription ctx :chat-rooms)])) ;; Resolve the `:chat-rooms` subscription\n\n  (def chat-room-list-component (constructor {:subscription-deps [:chat-rooms]}))\n\n  (def main-component (system {:main layout-component ;; Map compnents to keys\n  :sidebar sidebar-component\n  :chat-room-list chat-room-list-component}\n  {:chat-rooms (fn [app-state-atom])})) ;; Map subscriptions to keys\n  ```\n  \n  In the example above `main-component` will be a Reagent component that can be mounted\n  into the DOM, with all of the dependencies between components resolved.\n\n  `system` function provided everything that components need from the outside, and all of the \n  components are reusable by design.\n  "],"~$IUIComponent",["^ ","^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",14,"^O",14,"^P",14,"^Q",26,"^T","IUIComponent protocol defines functions that can be called on\n  the UIComponent records.","~:protocol-symbol",true,"~:jsdoc",["^V",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$url",[["^X","^Y"]],"^1L",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]],"^J",[["^X","^Y"]],"^1F",[["^X","^1G"],["^X","^1G","^1?"]],"~$component",[["^X","^1G"]],"^1=",[["^X","^1>"],["^X","^1>","^1?"]],"^1;",[["^X"]],"~$current-route",[["^X"]]]]],"^21",true,"^9","^S","^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",26,"^O",1,"^N",14,"^23",["^ ","^24",["^ ","^25",[["^X","^Y"]],"^1L",[["^X","^1M","^1N"],["^X","^1M","^1N","^1O"],["^X","^1M","^1N","^1O","^1P"]],"^J",[["^X","^Y"]],"^1F",[["^X","^1G"],["^X","^1G","^1?"]],"^26",[["^X","^1G"]],"^1=",[["^X","^1>"],["^X","^1>","^1?"]],"^1;",[["^X"]],"^27",[["^X"]]]],"~:info",null,"^P",14,"^1T","^1U","~:impls",["^8",["~$keechma.ui-component/UIComponent","~$default"]],"^T","IUIComponent protocol defines functions that can be called on\n  the UIComponent records.","^22",["^V",["@interface"]]],"~$resolve-component-subscriptions",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",155,"^O",17,"^P",155,"^Q",48,"^1C",true,"^U",["^V",["^W",["^V",[["^26","^1Z"]]]]]],"^1C",true,"^9","~$keechma.ui-component/resolve-component-subscriptions","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",48,"^10",["^V",[["^26","^1Z"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",155,"^P",155,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^26","^1Z"]]]]]],"~$component-dep-graph",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",87,"^O",17,"^P",87,"^Q",36,"^1C",true,"^U",["^V",["^W",["^V",[["^1D"]]]]]],"^1C",true,"^9","~$keechma.ui-component/component-dep-graph","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",36,"^10",["^V",[["^1D"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",87,"^P",87,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^1D"]]]]]],"^27",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",32,"^O",4,"^P",32,"^Q",17,"^R","^S","^T","Returns a current route data. It will use the `:current-route-fn` that is\n    injected from the outside to return the data.","^U",["^V",["^W",["^V",[["^X"]]]]]],"^R","^S","^9","~$keechma.ui-component/current-route","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",17,"^10",["^V",[["^X"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",32,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^T","Returns a current route data. It will use the `:current-route-fn` that is\n    injected from the outside to return the data."],"~$component-with-deps",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",103,"^O",17,"^P",103,"^Q",36,"^1C",true,"^U",["^V",["^W",["^V",[["~$component-key","^26","^1Y"]]]]]],"^1C",true,"^9","~$keechma.ui-component/component-with-deps","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",36,"^10",["^V",[["^2B","^26","^1Y"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",103,"^P",103,"^13",3,"^14",true,"^U",["^V",["^W",["^V",[["^2B","^26","^1Y"]]]]]],"~$resolve-dep",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",115,"^O",7,"^P",115,"^Q",18,"^U",["^V",["^W",["^V",[["~$dep-kw","~$coll-kw","^26","^1G","~$component-dep"]]]]],"^T","Resolves a dependency on the UIComponent record. Returns a new version\n  of the record with the resolved dependency.\n\n  ```clojure\n  (def news-component (constructor {:component-deps [:user-profile :similar-news]\n                                    :subscription-deps [:current-news :comments]}))\n\n  (resolve-dep :subscription-deps :subscriptions news-component :current-news (fn []...))\n  ;; Returns a new version of the `news-component` with the :current-news subscription resolved\n\n  (resolve-dep :component-deps :components news-component :user-profile user-profile-component))\n  ;; Returns a new version of the `news-component` with the :user-profile component resolved\n  ```\n\n  Two shorthand functions are defined that allow you to omit first two arguments:\n  \n  - `resolve-subscription-dep` - Resolves a subscription dependency\n  - `resolve-component-dep` - Resolves a component dependency\n  "],"^9","~$keechma.ui-component/resolve-dep","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",18,"^10",["^V",[["^2E","^2F","^26","^1G","^2G"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",115,"^P",115,"^13",5,"^14",true,"^U",["^V",["^W",["^V",[["^2E","^2F","^26","^1G","^2G"]]]]],"^T","Resolves a dependency on the UIComponent record. Returns a new version\n  of the record with the resolved dependency.\n\n  ```clojure\n  (def news-component (constructor {:component-deps [:user-profile :similar-news]\n                                    :subscription-deps [:current-news :comments]}))\n\n  (resolve-dep :subscription-deps :subscriptions news-component :current-news (fn []...))\n  ;; Returns a new version of the `news-component` with the :current-news subscription resolved\n\n  (resolve-dep :component-deps :components news-component :user-profile user-profile-component))\n  ;; Returns a new version of the `news-component` with the :user-profile component resolved\n  ```\n\n  Two shorthand functions are defined that allow you to omit first two arguments:\n  \n  - `resolve-subscription-dep` - Resolves a subscription dependency\n  - `resolve-component-dep` - Resolves a component dependency\n  "],"~$component->renderer",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",172,"^O",17,"^P",172,"^Q",36,"^1C",true,"^U",["^V",["^W",["^V",[["~$parent","^26"]]]]]],"^1C",true,"^9","~$keechma.ui-component/component->renderer","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",36,"^10",["^V",[["^2J","^26"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",172,"^P",172,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^2J","^26"]]]]]],"~$UIComponent",["^ ","~:num-fields",3,"~:protocols",["^8",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","^S","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^9","^2:","^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",23,"~:type",true,"^O",12,"^16",true,"^N",84,"~:record",true,"^P",84,"~:skip-protocol-flag",["^8",["^2O","^2P","^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","^2Y","^2Z","^2[","^30"]]],"^26",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",25,"^O",4,"^P",25,"^Q",13,"^R","^S","^T","Returns a component based on the key.","^U",["^V",["^W",["^V",[["^X","^1G"]]]]]],"^R","^S","^9","~$keechma.ui-component/component","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",13,"^10",["^V",[["^X","^1G"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",25,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^X","^1G"]]]]],"^T","Returns a component based on the key."],"^1;",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",29,"^O",4,"^P",29,"^Q",12,"^R","^S","^T","Returns a component renderer function that has the component record\n    partially applied (`ctx`) as the first argument.","^U",["^V",["^W",["^V",[["^X"]]]]]],"^R","^S","^9","~$keechma.ui-component/renderer","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",12,"^10",["^V",[["^X"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",29,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^T","Returns a component renderer function that has the component record\n    partially applied (`ctx`) as the first argument."],"~$resolve-subscription-dep",["^ ","^9","~$keechma.ui-component/resolve-subscription-dep","^M","resources/public/js/dev/keechma/ui_component.cljs","^N",140,"^O",1,"^P",140,"^Q",30,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",140,"^O",6,"^P",140,"^Q",30],"^T","See [[resolve-dep]].","^1T","^1U"],"~$map->UIComponent",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",84,"^O",12,"^P",84,"^Q",23,"^16",true,"^17","~:map","^U",["^V",["^W",["^V",[["~$G__37806"]]]]]],"^9","~$keechma.ui-component/map->UIComponent","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",23,"^10",["^V",[["^3:"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^16",true,"^17","^39","^N",84,"^P",84,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^3:"]]]]]],"~$constructor",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",252,"^O",7,"^P",252,"^Q",18,"^U",["^V",["^W",["^V",[["~$opts"]]]]],"^T","Createas a UIComponent record. Accepts `opts` as the argument. `opts` is\n  a map that can have the following params:\n\n  - `:component-deps` - Which child component is this component dependent on\n  - `:subscription-deps` - Which subscriptions is this component dependent on\n  - `:topic` - On which topic should this component send commands (to the controller)\n  - `:renderer` - A renderer function (Reagent component)\n\n  The UIComponent record is a way to list all the dependencies for a component. When\n  the application is started each component's renderer function will be partiall \n  applied with a verion of it's UIComponent that has the component and subscription\n  dependencies resolved.\n\n  This allows you to write components that are completely decoupled from the rest\n  of the application.\n\n  When you want to resolve injected component or subscription dependencies, you can\n  use the functions defined on the `UIComponent` protocol:\n\n  ```clojure\n  (def render [ctx] ;; `ctx` is a UIComponent with resolved dependencies\n    (let [child-component (component ctx :component-key)\n          subscription (subscription ctx :subscription-key)])\n\n  (def component (constructor {:renderer render\n                               :component-deps [:component-key]\n                               :subscription-deps [:subscription-key]))\n  ```\n  "],"^9","~$keechma.ui-component/constructor","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",18,"^10",["^V",[["^3="]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",252,"^P",252,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^3="]]]]],"^T","Createas a UIComponent record. Accepts `opts` as the argument. `opts` is\n  a map that can have the following params:\n\n  - `:component-deps` - Which child component is this component dependent on\n  - `:subscription-deps` - Which subscriptions is this component dependent on\n  - `:topic` - On which topic should this component send commands (to the controller)\n  - `:renderer` - A renderer function (Reagent component)\n\n  The UIComponent record is a way to list all the dependencies for a component. When\n  the application is started each component's renderer function will be partiall \n  applied with a verion of it's UIComponent that has the component and subscription\n  dependencies resolved.\n\n  This allows you to write components that are completely decoupled from the rest\n  of the application.\n\n  When you want to resolve injected component or subscription dependencies, you can\n  use the functions defined on the `UIComponent` protocol:\n\n  ```clojure\n  (def render [ctx] ;; `ctx` is a UIComponent with resolved dependencies\n    (let [child-component (component ctx :component-key)\n          subscription (subscription ctx :subscription-key)])\n\n  (def component (constructor {:renderer render\n                               :component-deps [:component-key]\n                               :subscription-deps [:subscription-key]))\n  ```\n  "],"~$resolve-subscriptions",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",163,"^O",17,"^P",163,"^Q",38,"^1C",true,"^U",["^V",["^W",["^V",[["^1D","^1Z"]]]]]],"^1C",true,"^9","~$keechma.ui-component/resolve-subscriptions","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",38,"^10",["^V",[["^1D","^1Z"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",163,"^P",163,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^1D","^1Z"]]]]]],"^25",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",17,"^O",4,"^P",17,"^Q",7,"^R","^S","^T","Returns a URL based on the params. It will use the `:url-fn` that is injected\n    from the outside to generate the URL based on the current app routes.","^U",["^V",["^W",["^V",[["^X","^Y"]]]]]],"^R","^S","^9","~$keechma.ui-component/url","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",7,"^10",["^V",[["^X","^Y"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",14,"^P",17,"^13",2,"^14",true,"^U",["^V",["^W",["^V",[["^X","^Y"]]]]],"^T","Returns a URL based on the params. It will use the `:url-fn` that is injected\n    from the outside to generate the URL based on the current app routes."],"~$missing-component-deps",["^ ","^K",null,"^L",["^ ","^M","/Users/retro/Projects/dataloader-example/resources/public/js/dev/keechma/ui_component.cljs","^N",96,"^O",17,"^P",96,"^Q",39,"^1C",true,"^U",["^V",["^W",["^V",[["^1D"]]]]]],"^1C",true,"^9","~$keechma.ui-component/missing-component-deps","^[",false,"^M","resources/public/js/dev/keechma/ui_component.cljs","^Q",39,"^10",["^V",[["^1D"]]],"^11",null,"^12",["^V",[null,null]],"^O",1,"^N",96,"^P",96,"^13",1,"^14",true,"^U",["^V",["^W",["^V",[["^1D"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:subscription-deps","~:keechma.ui-component/error","^19","~:keechma.ui-component/context","^1:","^9","^31","~:url-fn","~:topic","~:commands-chan","~:renderer","~:subscriptions","~:components","~:reporter","~:ui","^28","~:current-route-fn","^1;","~:keechma.ui-component/renderer","~:h1","~:main","~:redirect-fn","~:app-db","~:component-deps"]],"~:order",["^31","^3I","^3K","^28","^3Q","^9","^3L","^3W","^3S","^3O","^3X","^3P","^3M","^3N","^3T","^3J","^3Y","^3H","^19","^1:","^1;","^3V","^3R","^3U"]],"^T",null]